# Production Docker Compose configuration for Foodgram
# Uses pre-built images from DockerHub

version: '3.8'

services:

  db:
    container_name: foodgram_db
    image: postgres:15-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - ./.env_db
    restart: always

  backend:
    container_name: foodgram_backend
    image: hetdro451595/foodgram_backend:latest
    volumes:
      - media_data:/app/media/
      - static_data:/app/collected_static/
      - ../data:/data/
    depends_on:
      - db
    env_file:
      - ./.env_backend
    restart: always
    command: >
      sh -c "python manage.py makemigrations users recipes &&
             python manage.py migrate --noinput &&
             python manage.py load_ingredients &&
             python manage.py load_initial_data &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram_backend.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    container_name: foodgram-front
    image: hetdro451595/foodgram_frontend:latest
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - media_data:/usr/share/nginx/html/media/
      - static_data:/usr/share/nginx/html/static/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  pg_data:
  media_data:
  static_data:
