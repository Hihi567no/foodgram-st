# docker-compose.yml (in foodgram-st/food-real/backend/infra/)

version: '3.8' # Use a more recent version for better features

services:

  db:
    container_name: foodgram_db
    image: postgres:15-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data # Persistent data volume
    env_file:
      - ./.env_db # Create this file next to docker-compose.yml
    restart: always # Always restart if it crashes

  backend:
    container_name: foodgram_backend
    build: ../backend_real # Path to your backend directory containing Dockerfile
    volumes:
      - ../backend_real/:/app/ # Mount the backend code for development convenience (auto-reload)
      - ../data:/data/ # Mount the data directory for ingredient loading
      - media_data:/app/media/ # Volume for user-uploaded media files
      - static_data:/app/collected_static/ # Volume for Django static files
    depends_on:
      - db # Backend depends on the database
    env_file:
      - ./.env_backend # Create this file
    ports:
      - "8000:8000" # Expose backend port for direct access (optional, Nginx handles it)
    command: >
      sh -c "python manage.py makemigrations users recipes &&
             python manage.py migrate --noinput &&
             python manage.py load_ingredients &&
             python manage.py load_initial_data &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram_backend.wsgi:application --bind 0.0.0.0:8000" # Run migrations & collectstatic on startup
    restart: always

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf # Nginx config
      - ../frontend/build:/usr/share/nginx/html/ # Frontend static files
      - media_data:/usr/share/nginx/html/media/ # Serve media files from Nginx
      - static_data:/usr/share/nginx/html/django-static/ # Serve Django static files from Nginx
      - ../docs/:/usr/share/nginx/html/api/docs/ # OpenAPI docs
    depends_on:
      - backend # Nginx depends on the backend for proxying
      - frontend # Nginx depends on frontend for serving its files

volumes:
  pg_data: # Define the volume for PostgreSQL data
  media_data: # Define the volume for media files
  static_data: # Define the volume for Django static files