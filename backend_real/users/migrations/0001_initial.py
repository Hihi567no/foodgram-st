# Generated by Django 5.0.2 on 2025-05-31 20:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False,
                 help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(
                    default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(help_text='Required. Enter a valid email address.', max_length=254,
                 unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email address')),
                ('first_name', models.CharField(help_text="User's first name",
                 max_length=150, verbose_name='First name')),
                ('last_name', models.CharField(help_text="User's last name",
                 max_length=150, verbose_name='Last name')),
                ('username', models.CharField(help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                 max_length=150, unique=True, verbose_name='Username')),
                ('avatar', models.ImageField(blank=True, help_text='Optional profile picture',
                 null=True, upload_to='users/avatars/', verbose_name='Profile picture')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now, verbose_name='Date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(
                    auto_now_add=True, verbose_name='Subscription date')),
                ('subscriber', models.ForeignKey(help_text='User who is following', on_delete=django.db.models.deletion.CASCADE,
                 related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Subscriber')),
                ('target_user', models.ForeignKey(help_text='User being followed', on_delete=django.db.models.deletion.CASCADE,
                 related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='Target user')),
            ],
            options={
                'verbose_name': 'User subscription',
                'verbose_name_plural': 'User subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(
                fields=['email'], name='users_user_email_6f2530_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'],
                               name='users_user_usernam_65d164_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['subscriber'],
                               name='users_users_subscri_ebe9d9_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['target_user'],
                               name='users_users_target__54c0ef_idx'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.UniqueConstraint(
                fields=('subscriber', 'target_user'), name='unique_user_subscription'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.CheckConstraint(check=models.Q(('subscriber', models.F(
                'target_user')), _negated=True), name='prevent_self_subscription'),
        ),
    ]
