name: Main Foodgram Workflow

on:
  push:
    branches:
      - main
      - back

jobs:
  backend_tests_with_ruff:
    name: Tests backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: foodgram_password
          POSTGRES_DB: foodgram
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.8.0
          pip install -r ./backend_real/requirements.txt

      - name: test with ruff
        run: python -m ruff check backend_real/

      - name: test backend
        env:
          DJANGO_DEBUG: True
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: foodgram_password
          POSTGRES_DB: foodgram
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
        run: |
          cd backend_real/
          python manage.py test

  build_and_push_backend_to_dockerhub:
    name: Build backend Docker image and push to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests_with_ruff
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: set up Docker
        uses: docker/setup-buildx-action@v3
      - name: login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./backend_real/
          push: true
          tags: hetdro451595/foodgram_backend:latest
  
  build_and_push_frontend_to_dockerhub:
    name: Build frontend Docker image and push to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup Docker
        uses: docker/setup-buildx-action@v3
      - name: login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: hetdro451595/foodgram_frontend:latest

  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend_to_dockerhub
      - build_and_push_frontend_to_dockerhub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: copy docker-compose.yml via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/docker-compose.production.yml,infra/nginx.conf"
          target: "foodgram"

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram/infra
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            # Wait for services to be ready
            sleep 30
            # Check if services are running
            sudo docker compose -f docker-compose.production.yml ps

